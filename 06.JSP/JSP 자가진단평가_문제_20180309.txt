주의)
메모장에 문제 복사한 후 풀이 작성하고 제출.
제출시 '본인이름_20180309.txt' 파일로 만들고, 첨부 파일로 제출.
제출은 각 팀별 파일서버 '자가진단평가' 폴더에 저장.



--------------------------------------
- 데이터베이스 구성 및 샘플 자료
----------------------------------

--부서 정보 테이블(dept) 생성
CREATE TABLE 'dept' (
  'deptId' varchar(3) NOT NULL,
  'deptName' varchar(20) NOT NULL,
  PRIMARY KEY ('deptId')
);

INSERT INTO dept (deptId, deptName)
VALUES
('B01',
'개발부');
INSERT INTO dept (deptId, deptName)
VALUES
('B02',
'마케팅부');
INSERT INTO dept (deptId, deptName)
VALUES
('B03',
'총무부');
INSERT INTO dept (deptId, deptName) VALUES ('B04','회계부');  
COMMIT;

--회원 정보 테이블(members) 생성
CREATE TABLE 'members' (
  'mid_' varchar(3) NOT NULL,
  'name_' varchar(20) NOT NULL,
  'phone' varchar(20) NOT NULL,
  'email' varchar(50) DEFAULT NULL,
  'regDate' date DEFAULT NULL,
  'deptId' varchar(3) DEFAULT NULL,
  PRIMARY KEY ('mid_'),
  KEY 'members_deptId_fk' ('deptId'),
  CONSTRAINT 'members_deptId_fk' FOREIGN KEY ('deptId') REFERENCES 'dept' ('deptId')
);





--------------------------------------
- 화면 설계
--------------------------------------------
이미지(회원관리v3.2_디자인.png) 참조



------------------------------------------------------
문제) 화면구성에 맞는 JSP 프로그램 작성. 
//MySQLConnection.java
//Member.java
//MemberDAO.java
//member.jsp




//--------------------------------
//MySQLConnection.java
package com.test;

import java.sql.*;

public class MySQLConnection {
	
	static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
	static final String DB_URL = "jdbc:mysql://211.63.89.XX:3306/스키마?useSSL=false";

	static final String USER = "아이디";
	static final String PASS = "패스워드";	
	
	private static Connection conn;
	
	public static Connection connect() throws ClassNotFoundException, SQLException {
		
		Class.forName(JDBC_DRIVER);
		conn = DriverManager.getConnection(DB_URL, USER, PASS);
		
		return conn;
	}
	
	public static void close() throws SQLException {
		if (conn != null) {
			conn.close();
		}
	}
	
}





//--------------------------------
//Member.java
package com.test;

import java.time.*;

public class Member {
	
	private String mid_, name_, phone, email, deptId, deptName;
	private LocalDate regDate;
	
	public String getMid_() {
		return mid_;
	}
	public void setMid_(String mid_) {
		this.mid_ = mid_;
	}
	public String getName_() {
		return name_;
	}
	public void setName_(String name_) {
		this.name_ = name_;
	}
	public String getPhone() {
		return phone;
	}
	public void setPhone(String phone) {
		this.phone = phone;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getDeptId() {
		return deptId;
	}
	public void setDeptId(String deptId) {
		this.deptId = deptId;
	}
	public String getDeptName() {
		return deptName;
	}
	public void setDeptName(String deptName) {
		this.deptName = deptName;
	}
	public LocalDate getRegDate() {
		return regDate;
	}
	public void setRegDate(LocalDate regDate) {
		this.regDate = regDate;
	}

}







//--------------------------------
//MemberDAO.java
package com.test;

import java.sql.*;
import java.util.*;
import java.time.*;

public class MemberDAO {

	// 전체 명단 출력용 메소드
	public List<Member> list() {
		List<Member> result = new ArrayList<Member>();


		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = MySQLConnection.connect();


			//문제) 이 부분에 출력 액션 코드 작성.







		} catch (SQLException se) {
			System.out.print(se.getMessage());
		} catch (Exception e) {
			System.out.print(e.getMessage());
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se) {
			}
			try {
				MySQLConnection.close();
			} catch (SQLException se) {
				System.out.print(se.getMessage());
			}
		}

		return result;
	}



	//부서 정보 읽기용 메소드
	public List<Member> deptList() {
		List<Member> result = new ArrayList<Member>();


		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = MySQLConnection.connect();


			//문제) 이 부분에 출력 액션 코드 작성.









		} catch (SQLException se) {
			se.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se) {
			}
			try {
				MySQLConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}
		return result;

	}
	

	
	//전체 인원수 확인용 메소드
	public int totalCount() {
		int result = 0;

		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = MySQLConnection.connect();


			//문제) 이 부분에 출력 액션 코드 작성.






		} catch (SQLException se) {
			se.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se) {
			}
			try {
				MySQLConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}		
		
		return result;
	}


}





//--------------------------------
//member.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%-- 문제) 이 부분에 page directive 코드 작성. --%>


<%
		request.setCharacterEncoding("UTF-8");
		StringBuilder sb = new StringBuilder();
		StringBuilder dept = new StringBuilder();
		int count = 0;
		int totalCount = 0;
		
		MemberDAO dao = new MemberDAO();


		//문제) 이 부분에 출력 액션 코드 작성.










%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>SIST_쌍용교육센터</title>

<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<style>
div#input:hover, div#output:hover {
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}
</style>

<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>


<script>
	$(document).ready(function() {

	});
</script>
</head>
<body>

	<div class="container">

		<div class="panel page-header" style="text-align:center;">
			<h1 style="font-size:xx-large;">
				<a href=""><img src="img/sist_logo.png" alt="sist_logo.png"> </a>
				회원관리 <small>v3.1</small> <span style="font-size:small; color: #777777;">A website that manages personal information for members</span>
			</h1>
		</div>

		<div class="panel panel-default" id="input">
			<div class="panel-heading">회원관리 입력</div>
			<div class="panel-body">

				<form action="memberInsert.jsp" method="post">
					<div class="form-group">
						<label for="name_">Name:</label> <input type="text"
							class="form-control" id="name_" name="name_" placeholder="max:20" required>
					</div>
					<div class="form-group">
						<label for="phone">Phone:</label> <input type="text"
							class="form-control" id="phone" name="phone" placeholder="max:20" required>
					</div>
					<div class="form-group">
						<label for="email">Email:</label> <input type="email"
							class="form-control" id="email" name="email" placeholder="max:50">
					</div>
					
					<div class="form-group">
						<label for="regDate">RegDate:</label> <input type="date"
							class="form-control" id="regDate" name="regDate">
					</div>
										
					<div class="form-group">
					  <label for="deptId">DeptName:</label>
					  <select class="form-control" id="deptId" name="deptId">
					    <option value="B01">개발부</option>
					    <option value="B02">마케팅부</option>
					  </select>
					</div>					
					
					<button type="submit" class="btn btn-default">Submit</button>
  
				</form>


			</div>
		</div>

		<div class="panel panel-default" id="output">
			<div class="panel-heading">회원관리 출력</div>
			<div class="panel-body">



				<table class="table table-striped">
					<thead>
						<tr>
							<th>Mid</th>
							<th>Name</th>
							<th>Phone</th>
							<th>Email</th>
							<th>RegDate</th>
							<th>DeptName</th>
							<th>Update/Delete</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>M01</td>
							<td>John</td>
							<td>010-1234-1234</td>
							<td>john@example.com</td>
							<td>2017-01-01</td>
							<td>개발부</td>
							<td><div class="btn-group"><button type="button" class="btn btn-default btn-xs">Update</button><button type="button" class="btn btn-default btn-xs">Delete</button></div></td>
						</tr>
						<tr>
							<td>M02</td>
							<td>Mary</td>
							<td>010-4567-7654</td>
							<td>mary@example.com</td>
							<td>2017-05-10</td>
							<td>총무부</td>
							<td><div class="btn-group"><button type="button" class="btn btn-default btn-xs">Update</button><button type="button" class="btn btn-default btn-xs">Delete</button></div></td>
						</tr>
					</tbody>
				</table>

				<form class="form-inline" method="post">
					<div class="form-group">
						<button type="button" class="btn btn-default">TotalCount <span class="badge">0</span></button>
						<button type="button" class="btn btn-default">Count <span class="badge">0</span></button>
						<button	type="button" class="btn btn-default" ><span class="glyphicon glyphicon-step-backward"></span> Previous</button>
						<button	type="button" class="btn btn-default" >Next <span class="glyphicon glyphicon-step-forward"></span></button>
						
						<select class="form-control" id="key" name="key">
							<option value="mid_">Mid</option>
							<option value="name_">Name</option>
							<option value="phone">Phone</option>
							<option value="email">Email</option>
							<option value="regDate">RegDate</option>
							<option value="deptName">DeptName</option>
						</select>
					</div>
					<div class="input-group">
						<input type="text" class="form-control" id="value" name="value"
							placeholder="Search" >

						<div class="input-group-btn">
							<button class="btn btn-default" type="submit">
								<i class="glyphicon glyphicon-search"></i>
							</button>
						</div>
					</div>
				</form>

								
			</div>
		</div>

	</div>

</body>
</html>





