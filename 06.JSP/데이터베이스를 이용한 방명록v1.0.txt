방명록 v1.0 (JSP 버전)

1. 요구사항
- 일반사용자가 로그인 과정없이 글쓰기, 글출력, 글검색할 수 있다.
- 글쓰기 하는 경우 이름, 패스워드, 글내용 입력한다.
- 일반사용자는 사진을 캐러셀(슬라이드) 기능으로 볼 수 있다.

2. 화면설계
이미지(방명록v.1.0_01.png) 참조


3. 데이터베이스(MySQL) 준비

/*
방명록 저장용 테이블
-> 글번호, 글쓴이, 패스워드, 글내용, 글쓴날짜
*/
CREATE TABLE guestbook (
	gid VARCHAR(6) /* PK, 'G00001' 형태 */
	, name_ VARCHAR(20)
	, pw VARCHAR(20)
	, content VARCHAR(500)
	, regDate DATE /* 기본값 오늘 날짜 */
	, clientIP VARCHAR(15) /* XXX.XXX.XXX.XXX */
	, blind INT /* 기본값 0. 0 정상적인 경우, 1은 블라인드 처리.  */
);
	

ALTER TABLE guestbook 
	ADD CONSTRAINT guestbook_pk_gid PRIMARY KEY(gid);

INSERT INTO guestbook (gid, name_, pw, content, regDate, clientIP, blind)
	VALUES ('G00001', '관리자', 'admin', 'JSP 과정 진행 중입니다. 프로젝트 발표 사진도 올릴 예정입니다.', '2018-03-09', '211.63.89.68',  0);

INSERT INTO guestbook (gid, name_, pw, content, regDate, clientIP, blind) VALUES ((SELECT * FROM (SELECT CONCAT('G', LPAD(IFNULL(SUBSTRING(MAX(gid), 2), 0) + 1, 5, 0)) AS newGid FROM guestbook) g)
, '홍길동', '1234', '방명록 개설을 축하합니다.', NOW(), '211.63.89.68',  0);

COMMIT;

/* 일반사용자 모드 */
SELECT gid, name_, content, regDate FROM guestbook WHERE blind = 0 ORDER BY gid DESC;

/* 일반사용자 모드 */
SELECT COUNT(*) AS totalCount FROM guestbook WHERE blind = 0;

/* 관리자 모드 */
SELECT gid, name_, content, regDate, clientIP, blind FROM guestbook ORDER BY gid DESC;

/* 관리자 모드 */
SELECT COUNT(*) AS totalCount FROM guestbook;



/*
사진 정보 저장용 테이블
-> 사진번호, 사진파일이름(max:50), 사진설명(max:50)
*/
create table pictureList (
	pid  varchar(4)  /* PK. 'P001' 형태 */
	, picName varchar(50)
	, picContent varchar(50)
);

ALTER TABLE pictureList
	ADD CONSTRAINT pictureList_pk_pid PRIMARY KEY(pid);

INSERT INTO pictureList (pid, picName, picContent) 
	VALUES ('자동번호증가쿼리', 'ny.jpg', '뉴욕 공연');
INSERT INTO pictureList (pid, picName, picContent) 
	VALUES ('자동번호증가쿼리', 'la.jpg', 'LA 공연');
COMMIT;

SELECT pid, picName, picContent 
	FROM pictureList
	ORDER BY pid;


4. 작성 순서
1) 요구분석 결과에 따른 화면설계(MockUp, 웹디자인)
2) 데이터베이스에서 테이블 및 초기 자료 준비
3) 화면설계에 따른 쿼리 준비 -> INSERT, SELECT
4) 자료형 클래스 선언
5) DAO 클래스 선언 및 저장소 준비, 초기 자료 준비
6) DAO 클래스 전체 출력 메소드 작성
7) Test 클래스에서 전체 출력 메소드 테스트
8) 화면 설계에 따른 액션 클래스 작성
9) 전체 출력 메소드 연결
10) 입력 기능 추가
