---------------------------------
SELECT 컬럼리스트,...
	FROM 테이블,...
	WHERE 조건식
	GROUP BY 기준컬럼, ...
	HAVING 조건식
	ORDER BY 기준컬럼,...



-------------------------------------------------
INSA 테이블 생성 및 데이터 입력

1. 임의의 일반 사용자 계정 생성 및 로그인
2. SQL 파일 실행 (insa.sql 파일을 적당한 경로(D:\)에 복사한 후 실행할 것)
-> @D:\insa.sql 
3. 실행 결과 확인.
-> SELECT * FROM insa;

--------------------------------------------------
INSA 테이블 관련 문제 풀이


1. INSA 테이블 전체자료 출력
SELECT * FROM insa;

SELECT num AS "NUM", name AS "NAME", ssn, ibsadate, city, tel
    , buseo, jikwi, basicpay, sudang
  FROM insa;  
 

2. 일반 사용자 사용자 소유 테이블(객체) 목록 확인
--user_tables 딕셔너리 사용
SELECT * FROM user_tables;



3. INSA 테이블 구조 확인
DESC insa;

이름       널        유형           
-------- -------- ------------ 
NUM      NOT NULL NUMBER(5)    --직원번호
NAME     NOT NULL VARCHAR2(20)  --이름
SSN      NOT NULL VARCHAR2(14)   --주민번호
IBSADATE NOT NULL DATE           --입사일
TEL               VARCHAR2(15)   --전화번호
CITY              VARCHAR2(10)   --지역
BUSEO    NOT NULL VARCHAR2(15)   --부서
JIKWI    NOT NULL VARCHAR2(15)   --직위
BASICPAY NOT NULL NUMBER(10)     --기본급
SUDANG   NOT NULL NUMBER(10)     --수당






---------------------------------------
4. 이름(name), 주민번호(ssn), 입사일(ibsadate), 전화번호(tel) 출력
SELECT name, ssn, ibsadate, tel 
	FROM insa;


5. 이름(name), 기본급(basicpay), 수당(sudang), 기본급+수당(->급여) 출력
SELECT name, basicpay, sudang
    , (basicpay+sudang) pay
  FROM insa;



6. 이름(name), 지역명(city), 부서명(buseo) 출력. 별명(Alias) 사용.

SELECT name AS 이름, city AS 지역, buseo AS 부서명
  FROM insa;
SELECT name 이름, city 지역, buseo 부서명
  FROM insa;
SELECT name "이름", city "지역", buseo "부서명"
  FROM insa;



7. 지역명(city)이 '서울'인 직원의 이름(name), 지역명(city), 부서명(buseo), 직위명(jikwi) 출력. WHERE 구문 추가.

SELECT name, city, buseo, jikwi
	FROM insa
	WHERE city='서울';
--20


8.지역명(city)이 '서울'이면서 -->WHERE 구문
 기본급이 150만원 이상인 사람 -->WHERE 구문
 출력 (name, city, basicpay, ssn)


9.지역명(city)이 '인천'이면서, 기본급이 100만원~200만원인 경우만 출력.


 
10.지역명이 '서울'이거나 부서명이 '개발부'인 자료 출력 (name, city, buseo)

 
11.지역명(city)이 '서울', '경기'인 사람만 출력 (name, city, buseo). IN 연산자 사용.


12.부서명(buseo)이 '개발부', '영업부'인 사람만 출력. IN 연산자 사용.



13. 급여(basicpay + sudang)가 250만원 이상인 사람. --> WHERE 구문
(name, basicpay, sudang, basicpay+sudang)
 

14. 주민번호(ssn)를 기준으로 남자 직원만 출력. (이름, 지역명, 성별, 주민번호). 
SUBSTR() 함수 이용.

 
15. 주민번호(ssn)를 기준으로 80년대(1980~1989) 태어난 사람만 출력. (이름, 지역명, 성별, 주민번호). 
SUBSTR() 함수 이용.




16. 지역명이 '서울' 중에서 70년대(1970~1979) 태어난 직원 출력. SUBSTR() 함수 이용.  (이름, 지역명, 성별, 주민번호). 


17. 지역명(city)이 '서울' 중에서 70년대(1970~1979) 태어난 남자 직원만 출력. SUBSTR() 함수 이용.  (이름, 지역명, 성별, 주민번호). 

		
 
18. 지역명(city)이 '서울' 이면서 김씨만 출력(성씨가 1자라는 가정). (이름, 지역명). 
SUBSTR() 함수 이용.



19. 2000년도에 입사한 사람 출력. (이름, 지역명, 입사일). 
SUBSTR() 또는 TO_CHAR() 함수 이용.


20. 2000년 10월에 입사한 사람 출력. (이름, 지역명, 입사일). 


21. 주민번호(ssn)를 기준으로 직원의 나이 구하기. (이름, 성별, 주민번호, 나이)
나이 계산은 (올해 년도 - 태어난 년도 + 1) 로 계산.
SELECT TO_CHAR(SYSDATE, 'YYYY') AS "현재년도"
  ,TO_CHAR(TO_DATE(SUBSTR(ssn, 1, 6)), 'YYYY') AS "기준년도"
  ,TO_CHAR(SYSDATE, 'YYYY') -
  TO_CHAR(TO_DATE(SUBSTR(ssn, 1, 6)), 'YYYY') + 1 AS "계산결과"
  FROM insa;




22. 주민번호(ssn) 기준으로 현재 나이대가 30대인 사람만 출력. (이름, 성별, 주민번호, 나이)
나이 계산은 (올해 년도 - 태어난 년도 + 1) 로 계산.


23. 주민번호(ssn) 기준으로 5월달생만 출력. SUBSTR() 함수 이용. (이름, 성별, 주민번호, 나이)

WHERE SUBSTR(ssn, 3, 2) = '05'


24. 주민번호(ssn) 기준으로 5월달생만 출력. (이름, 성별, 주민번호, 나이)
주민번호의 생년월일 부분만을 추출->날짜형 자료로 변환->월 부분만 추출.

WHERE TO_CHAR(TO_DATE(SUBSTR(ssn, 1, 6)), 'MM')='05'


25. 지역명(city) 오름차순으로 정렬하고, 지역명(city)이 같으면 기본급(basicpay) 내림차순

SELECT name, city, buseo, jikwi, basicpay
	FROM insa
	ORDER BY city ASC, basicpay DESC;

SELECT name, city, buseo, jikwi, basicpay
	FROM insa
	ORDER BY city, basicpay DESC;


 
26. 지역명(city)이 '서울' 중에서 기본급+수당(->급여) 내림차순으로 정렬. 
(이름, 지역명, 기본급+수당->급여)



 
27. 여자 중 부서(buseo) 오름차순으로 정렬하고, 부서가 같으면 기본급(basicpay) 내림차순 정렬. (이름, 주민번호, 부서, 기본급)



28. 남자 중에서 나이를 기준으로 오름차순 정렬해서 출력. (이름, 성별, 주민번호, 나이)
나이 계산은 (올해 년도 - 태어난 년도 + 1) 로 계산.




29. 지역명(city)이 '서울' 중에서 입사일(ibsaDate)이 빠른 사람을 먼저 출력.



30. 성씨가 김씨가 아닌 사람 출력. (이름, 지역, 기본급). 
LIKE 연산자 또는 SUBSTR() 함수 이용.

NOT LIKE

!=  <>


31. 지역명(city)이 '서울', '부산', '대구' 이면서 
전화번호(tel)에 5 또는 7이 포함된 자료 출력하되 
부서명(buseo)의 마지막 '부'는 출력되지 않도록함. 
(이름, 지역명, 부서명, 전화번호)

RTRIM(buseo, '부')

SELECT  name, city, tel
    , RTRIM(buseo, '부') buseo
  FROM insa
  WHERE (city IN ('서울', '부산', '대구'))  AND
    (INSTR(tel, '5', 1, 1)>0  OR INSTR(tel, '7', 1, 1)>0);


32. 전화번호(tel)가 있으면 '-'을 제거하고 출력하고, 없으면 '전화번호없음'을 출력

SELECT name, tel
  , DECODE(tel
      , null, '전화번호 없음'
      , SUBSTR(tel, 1, 3) || SUBSTR(tel, 5, 4) || SUBSTR(tel, 10, 4)) tel4
  FROM insa;


SELECT name, tel
  , DECODE(tel
      , null, '전화번호 없음'
      , REPLACE(tel, '-')) tel4
  FROM insa;  


33. 급여(basicpay+sudang)가 100만원 미만
, 100만원 이상~200만원 미만, 200만원 이상인 직원들의 수 출력.
--GROUP BY 구문

SELECT TRUNC((basicpay+sudang)/1000000) pay
  FROM insa;

SELECT DECODE(TRUNC((basicpay+sudang)/1000000)
      , 0, '100만 미만'
      , 1, '100만 이상~200만 미만'
      , 2, '200만 이상') AS title
  , COUNT(*) AS 직원수
  FROM insa
  GROUP BY TRUNC((basicpay+sudang)/1000000);

출력예)
title			직원수
--------------------------------
100만 이상~200만 미만	30
200만 이상		26
100만 미만		4



34. 주민번호(ssn)를 가지고 생년월일의 년도별 직원수 출력. 
   SUBSTR(), COUNT(), GROUP BY 이용.




35. 주민번호(ssn)를 기준으로 월별 오름차순, 월이 같으면 년도 내림차순 출력. 
(이름, 주민번호) . 
SUBSTR(), ORDER BY  이용.




36. 입사일(ibsaDate)을 기준으로  월별 오름차순, 월이 같으면 년도 내림차순 출력. 
주의. 입사일은 자료형이 DATE입니다.
주의. 2000년도 이후 입사자는 내림차순 지정시 뒤로 갈수 있으므로 주의할 것.
TO_CHAR(입사일, 'YYYY')
TO_CHAR(입사일, 'MM')


37. 전체인원수, 남자인원수, 여자인원수를 동시 출력.
출력 예)

전체인원수   남자인원수   여자인원수
   60	     31	          29

SELECT COUNT(*) 전체인원수
  , COUNT(DECODE(SUBSTR(ssn, 8, 1), 2, null, 1)) 남자인원수
  , COUNT(DECODE(SUBSTR(ssn, 8, 1), 1, null, 2)) 여자인원수
  FROM insa;


인원수 구분  인원수
남자인원수   31
여자인원수   29
전체인원수   60


SELECT DECODE(SUBSTR(ssn, 8, 1)
        , 1, '남자인원수'
        , 2, '여자인원수'
        , '전체인원수') "인원수 구분"
        , COUNT(*) 인원수
  FROM insa
  GROUP BY ROLLUP(SUBSTR(ssn, 8, 1));




38. '개발부', '영업부', '총무부' 인원수 출력. COUNT(), DECODE() 함수 이용.
개발부->14
영업부->16
총무부->7


39. 지역명(city)이 '서울'이면서, 성별이 남자인 직원수 출력.
COUNT(), WHERE 이용




40. 부서(buseo)가 '영업부'이고, 남자인 경우, 여자인 경우 인원수 출력.  
COUNT(), DECODE() , WHERE 이용.
출력 예)
영업부인원수   남자인원수   여자인원수
   XX	          XX	       XX



41. '개발부', '영업부', '총무부' 인원수 출력. 단, 지역명(city)은 '서울'로 한정.
출력 예)
영업부인원수   개발부인원수   총무부인원수
   XX	          XX	       XX




42. 지역명(city)이 '서울'인 남자와 여자의 기본급(basicpay) 합 출력.
WHERE, DECODE(), SUM()


SELECT 
    SUM( DECODE(SUBSTR(ssn, 8, 1), 1, basicpay) )  남자기본급합
  , SUM( DECODE(SUBSTR(ssn, 8, 1), 2, basicpay) ) 여자기본급합
  FROM insa
  WHERE city='서울';


43. 남자와 여자의 기본급(basicpay) 평균값 출력. AVG(), DECODE() 함수 이용.

남자 평균->1676168
여자 평균->1428634


44. '개발부' 남자와 '개발부' 여자의 기본급(basicpay) 평균값 출력. AVG(), DECODE() 함수 이용.

개발부 남자 평균->1392500
개발부 여자 평균->1384375


45. 부서(buseo)별 남자와 여자 인원수 구하기

--남자, 여자 출력. 

SELECT '771212-1022432'
    , SUBSTR('771212-1022432', 8, 1) AS 성별
    , DECODE(SUBSTR('771212-1022432', 8, 1)
            , 1, '남자'
            , 2, '여자') AS 성별
  FROM dual;

SELECT name, ssn
    , SUBSTR(ssn, 8, 1) AS 성별
    , DECODE(SUBSTR(ssn, 8, 1)
            , 1, '남자'
            , 2, '여자') AS 성별
  FROM insa;

--남자 인원수 출력
SELECT COUNT(*) AS "남자인원수"
  FROM insa
  WHERE SUBSTR(ssn, 8, 1)=1;

--여자 인원수 출력
SELECT COUNT(*) AS "여자인원수"
  FROM insa
  WHERE SUBSTR(ssn, 8, 1)=2;

--남자, 여자 인원수 출력
SELECT COUNT(DECODE(SUBSTR(ssn, 8, 1), 1, 1)) AS "남자인원수"
  , COUNT(DECODE(SUBSTR(ssn, 8, 1), 2, 1)) AS "여자인원수"
      FROM insa;


--부서별 총원, 남자, 여자 인원수 출력
SELECT buseo
    , COUNT(*) AS "인원수"
   , COUNT(DECODE(SUBSTR(ssn, 8, 1), 1, 1)) AS "남자인원수"
  , COUNT(DECODE(SUBSTR(ssn, 8, 1), 2, 1)) AS "여자인원수"
    FROM insa
    GROUP BY buseo;

총무부	7	4	3
개발부	14	6	8
영업부	16	8	8
기획부	7	4	3
인사부	4	4	0
자재부	6	2	4
홍보부	6	3	3



46. 지역(city)별 남자와 여자 인원수 구하기



47. 입사년도(ibsaDate)별 남자와 여자 인원수 구하기



48. '영업부', '총무부' 인원만을 가지고 입사년도(ibsaDate)별 남자와 여자 인원수 구하기



49. 지역명(city)이 '서울'인 경우 부서(buseo)별 남자와 여자인원수, 남자와 여자 급여합 출력.


50. 부서(buseo)별 인원수 출력. 인원수가 10 이상인 경우만. GROUP BY, COUNT(), HAVING 이용.


51. 부서(buseo)별 남,여 인원수 출력. 여자인원수가 5명 이상인 부서만 출력.



52. 부서(buseo)별 평균 급여를 출력하되, A, B, C 등급으로 나눠서 출력.
200만원 초과 - A등급
150~200만원 - B등급
150만원 미만 - C등급

DECODE 또는 CASE ~ END


 
53. 이름, 성별, 나이 출력
       성별: 주민번호 1,3->남자, 2,4->여자 (DECODE 사용)
       나이: 주민번호 이용해서

 
54. 지역명(city)이 '서울'이면서 기본급(basicpay)이 200만원 이상인 직원. (이름, 기본급)

 
55. 입사월별 인원수 구하기. (월, 인원수)   COUNT, GROUP BY, TO_CHAR 사용
        출력형태 ----------
        월      인원수
        1월    10명
        2월    25명


SELECT CONCAT(TO_NUMBER(TO_CHAR(ibsadate, 'MM')), '월') AS 월
      , CONCAT(COUNT(*),'명') AS 인원수
  FROM insa
  GROUP BY TO_CHAR(ibsadate, 'MM')
  ORDER BY TO_CHAR(ibsadate, 'MM');


56. 이름, 생년월일, 기본급, 수당을 출력.
       생년월일은 주민번호 기준 (2000-10-10 형식으로 출력)
       기본급은 \1,000,000 형식으로 출력
숫자 서식 지정 => TO_CHAR(숫자데이터, '999,999,999,999')


57. 이름, 지역명, 기본급을 출력하되 지역명 오름차순 출력(1차 정렬 기준). 
지역명이 같으면 기본급 내림차순 출력(2차 정렬 기준).

 
 
58. 전화번호(tel)가 NULL이 아닌것만 출력. (이름, 전화번호)

 
59. 근무년수가 10년 이상인 사람 출력. (이름, 입사일)


 
60. 주민번호(ssn)를 기준으로 75~82년생 출력. (이름, 주민번호, 지역명). 
SUBSTR() 함수, BEWTEEN AND 구문, TO_NUMBER() 함수 이용.



61. 근무년수가 10~15년인 사람 출력. (이름, 입사일)

 
62. 김씨, 이씨, 박씨만 출력 (이름, 부서). SUBSTR() 함수 이용.


63. 입사일(ibsaDate)을 "년-월-일 요일" 형식으로 남자만 출력 (이름, 주민번호, 입사일)


64. 부서(buseo)별, 직위(jikwi)별 급여합 구하기. (부서, 직위, 급여합)

--부서별, 직위별 직원수
SELECT buseo, jikwi, COUNT(*) count_
  FROM insa
  GROUP BY buseo, jikwi
  ORDER BY buseo, jikwi;

개발부	과장	2
개발부	대리	2
개발부	부장	1
개발부	사원	9
기획부	대리	3
기획부	부장	2
기획부	사원	2
영업부	과장	1
영업부	대리	5
영업부	부장	2
영업부	사원	8
인사부	과장	1
...

 
65. 부서(buseo)별, 직위(jikwi)별 인원수를 구하되 인원수가 5명 이상인 경우만 출력.
 

66. 2000년도에 입사한 여직원. (이름, 주민번호, 입사일)


67. 성씨가 한 글자(김, 이, 박 등)라는 가정하에 성씨별 인원수 (성씨, 인원수)
 

68. 지역(city)별, 성별 인원수.


69. 부서(buseo)별 남자인원수가 5명 이상인 부서와 남자인원수.

 
70. 입사년도(ibsaDate)별 인원수.


71. 전체인원수, 2000년, 1999년, 1998년도에 입사한 인원을 다음의 형식으로 출력.
        전체 2000 1999 1998
         60    x    x    x


72. 아래 형식으로 지역(city)별 인원수 출력. ROLLUP 구문 이용.
        전체 서울  인천  경기
         60    x     x     x


	지역명 인원수
	서울   XX
	인천   XX
	경기   XX
	전체  XX

----------------
SELECT 
   COUNT(*) 전체
  ,COUNT(DECODE(city, '강원', 1)) 강원
  ,COUNT(DECODE(city, '경기', 1)) 경기
  ,COUNT(DECODE(city, '경남', 1)) 경남
  ,COUNT(DECODE(city, '경북', 1)) 경북
  ,COUNT(DECODE(city, '부산', 1)) 부산
  ,COUNT(DECODE(city, '서울', 1)) 서울
  ,COUNT(DECODE(city, '인천', 1)) 인천
  ,COUNT(DECODE(city, '전남', 1)) 전남
  ,COUNT(DECODE(city, '전북', 1)) 전북
  ,COUNT(DECODE(city, '제주', 1)) 제주
  ,COUNT(DECODE(city, '충남', 1)) 충남
  FROM insa;

전체   강원    경기    경남     ...
60	2	13	1	...


---------------
SELECT DECODE(city, NULL, '전체', city) city, COUNT(*) count_
  FROM insa
  GROUP BY ROLLUP(city);

강원	2
경기	13
경남	1
경북	1
부산	3
서울	20
인천	9
전남	3
전북	5
제주	2
충남	1
전체	60

--------------------------------------------------------------



