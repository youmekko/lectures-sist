주의)
메모장에 문제 복사한 후 풀이 작성하고 제출.
제출시 '본인이름_20180129.txt' 파일로 만들고, 첨부 파일로 제출.
제출은 각 팀별 파일서버 '자가진단평가' 폴더에 저장.





--------------------------------------
- 데이터베이스 구성 및 샘플 자료
----------------------------------
--회원 정보 테이블(members) 생성
CREATE TABLE members (
    mid VARCHAR2(3) --PK
    ,name_ NVARCHAR2(20) NOT NULL
    ,phone VARCHAR2(20) NOT NULL
    ,email VARCHAR2(50)
    ,regDate DATE
    ,deptId VARCHAR2(3) --FK
);

--부서 정보 테이블(dept) 생성
CREATE TABLE dept (
    deptId VARCHAR2(3) --PK
    ,deptName NVARCHAR2(20) NOT NULL
);


--제약조건 추가
ALTER TABLE members
ADD CONSTRAINT members_mid_pk PRIMARY KEY(mid);
ALTER TABLE dept
ADD CONSTRAINT dept_deptId_pk PRIMARY KEY(deptId);

--members 테이블에서 deptId 컬럼에 FK 제약 조건 추가.
ALTER TABLE members
ADD CONSTRAINT members_deptId_fk FOREIGN KEY(deptId)
        REFERENCES dept(deptId);

--샘플 자료 입력
INSERT INTO dept (deptId, deptName) VALUES ('B01', '개발부');
INSERT INTO dept (deptId, deptName) VALUES ('B02', '마케팅부');
INSERT INTO dept (deptId, deptName) VALUES ('B03', '총무부');

COMMIT;


--members 테이블에서 번호 자동 증가 시켜주는 서브쿼리
SELECT CONCAT('M', LPAD(NVL(SUBSTR(MAX(mid), 2), 0) + 1, 2, 0)) AS newMid FROM members;







--------------------------------------
- 화면 설계
--------------------------------------------
1. 회원 정보 입력  2. 회원 정보 출력 3. 회원 정보 검색
선택(1~3, 0 quit)?2
--------------
회원 정보 출력
--------------
총: 3건
--------------------------------------------
M01 hong 010-1234-1234 hong@naver.com 2017-04-28 개발부
M02 choi 010-5678-1234 choi@naver.com 2017-05-01 개발부
M03 park 010-4321-4321 park@naver.com 2017-05-10 마케팅부

---------------------------------------------
1. 회원 정보 입력  2. 회원 정보 출력 3. 회원 정보 검색
선택(1~3, 0 quit)?1
--------------
회원 정보 입력
--------------
이름:kim
전화번호:010-1111-2222
이메일:kim@test.com
등록일(YYYY-MM-DD):2017-11-28
{B01=개발부, B02=마케팅부, B03=총무부}
부서번호:B01
회원 정보 입력이 성공했습니다.

--------------------------------------------
1. 회원 정보 입력  2. 회원 정보 출력 3. 회원 정보 검색
선택(1~3, 0 quit)?3

--------------------------------------------
3. 회원 정보 검색 서브메뉴
1. 번호 기준 2. 이름 기준 3. 전화번호 기준 ....
선택(1~3, 0 quit)?2
이름:hong
--------------
회원 정보 검색
--------------
총: 1건
--------------------------------------------
M01 hong 010-1234-1234 hong@naver.com 2017-04-28 개발부

--------------------------------------------
3. 회원 정보 검색 서브메뉴
1. 번호 기준 2. 이름 기준 3. 전화번호 기준 ....
선택(1~3, 0 quit)?2
이름:test
--------------
회원 정보 검색
--------------
총: 0건
검색 결과가 없습니다.

--------------------------------------------
3. 회원 정보 검색 서브메뉴
1. 번호 기준 2. 이름 기준 3. 전화번호 기준 ....
선택(1~3, 0 quit)?0

--------------------------------------------
1. 회원 정보 입력  2. 회원 정보 출력 3. 회원 정보 검색
선택(1~3, 0 quit)?0
프로그램 종료.








------------------------------------------------------
문제) 화면구성에 맞는 JDBC 프로그램 작성. 2.회원정보출력, 1.회원정보입력, 3.회원정보검색 순으로 액션 코드 작성.
//DBConnection.java
//Member.java
//MemberDAO.java
//MemberService.java
//Main.java





//--------------------------------
//DBConnection.java
package com.test;

import java.sql.*;

//데이터베이스 연결 정보 관리 클래스
public class DBConnection {
	
	// JDBC driver name and database URL
	private static final String JDBC_DRIVER = "oracle.jdbc.driver.OracleDriver";
	private static final String DB_URL = "jdbc:oracle:thin:@211.63.89.XX:1521:xe";

	// Database credentials
	private static final String USER = "사용자아이디";
	private static final String PASS = "패스워드";	
	
	private static Connection conn;
	
	//데이테베이스 커넥션 객체 생성 메소드
	public static Connection connect() throws ClassNotFoundException, SQLException {
		
		// STEP 2: Register JDBC driver
		Class.forName(JDBC_DRIVER);
		// STEP 3: Open a connection
		conn = DriverManager.getConnection(DB_URL, USER, PASS);
		
		return conn;
	}
	
	//데이테베이스 커넥션 객체 소멸 메소드
	public static void close() throws SQLException {
		if (conn != null) {
			conn.close();
		}
	}
	
}


//--------------------------------
//Member.java
package com.test;

import java.time.LocalDate;

public class Member {

	private String mid, name_, phone, email, deptId, deptName;
	private LocalDate regDate;

	//매개변수 있는 생성자 구성

	
	//getter, setter 구성
	public String getMid() {
		return mid;
	}

	public void setMid(String mid) {
		this.mid = mid;
	}

	public String getName_() {
		return name_;
	}

	public void setName_(String name_) {
		this.name_ = name_;
	}

	public String getPhone() {
		return phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public LocalDate getRegDate() {
		return regDate;
	}

	public void setRegDate(LocalDate regDate) {
		this.regDate = regDate;
	}

	public String getDeptId() {
		return deptId;
	}

	public void setDeptId(String deptId) {
		this.deptId = deptId;
	}

	public String getDeptName() {
		return deptName;
	}

	public void setDeptName(String deptName) {
		this.deptName = deptName;
	}

	//오버라이딩 구성

}



//--------------------------------
//MemberDAO.java
package com.test;

import java.sql.*;
import java.time.LocalDate;
import java.util.*;

public class MemberDAO {

	//회원 출력 액션 메소드
	public List<Member> memberList() {
		List<Member> result = new ArrayList<Member>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBConnection.connect();
			
		



			
		} catch (SQLException se) {
			se.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
			} catch (SQLException se) {
			}
			try {
				DBConnection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}
		
		return result;
	}
	
	//부서 출력 액션 메소드
	public Map<String, String> deptList() {
		



	}
	
	//입력 액션 메소드
	public int memberAdd(Member m) {


		
	}
	
	
	//검색 액션 메소드
	public List<Member> memberList(String key, String value) {
		
	
	


	}
	 
	
}



//--------------------------------
//MemberService.java
package com.test;

import java.time.LocalDate;
import java.util.*;

//콘솔 액션 전용 클래스
public class MemberService {
	
	private MemberDAO dao = new MemberDAO();
	
	//회원 정보 출력 메소드
	public void memberList() {
		

		
	}
	
	//부서 정보 출력 메소드
	private String deptList() {



	}

	//회원 정보 입력 메소드
	public void memberAdd(Scanner sc) {


		
	}
	
	
	//회원 정보 검색 서브메뉴
	public void memberList(Scanner sc) {
		


		
	}
	
	//회원 정보 검색 메소드
	private void memberList(Scanner sc, String key) {


	}

}



//--------------------------------
//Main.java
package com.test;

import java.util.Scanner;

public class Main {

	//메인 메뉴 액션 메소드
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		MemberService service = new MemberService();

		// 메인 메뉴 액션
		boolean run = true;
		while (run) {
			System.out.println("--------------------------------------------");
			System.out.println("1.회원정보입력 2.회원정보출력 3.회원정보검색");
			System.out.println("--------------------------------------------");
			System.out.print("선택(1~3, 0 quit)?");

			int m = sc.nextInt();
			sc.nextLine();

			switch (m) {
			case 0:	run = false; break;
			case 1:	service.memberAdd(sc); break;
			case 2:	service.memberList(); break;
			case 3:	service.memberList(sc); break;
			}

		}

		sc.close();
		System.out.println("프로그램 종료");
		
	}

}






